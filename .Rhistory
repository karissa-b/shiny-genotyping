names_from = "Reading", values_from = "dF",
Postion
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Postion
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
prcomp()
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position")
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot()
library(ggfortify)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot()
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
left_join(genotypes)
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>% .$x
autoplot(
data = .$x %>%
rownames_to_column("Position") %>%
left_join(genotypes)
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
rownames_to_column("Position") %>%
left_join(genotypes)
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
as.data.frame() %>%
rownames_to_column("Position") %>%
left_join(genotypes)
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
as.data.frame() %>%
rownames_to_column("Position") %>%
left_join(genotypes),
colour = "Genotype"
)
genotypes
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
as.data.frame() %>%
rownames_to_column("Position") %>%
left_join(genotypes),
colour = "genotype"
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
hclust
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
hclust()
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position")
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
t %>%
column_to_rownames("Position")
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
t %>%
prcomp %>%
autoplot(
data = .$x %>%
as.data.frame() %>%
rownames_to_column("Position") %>%
left_join(genotypes),
colour = "genotype"
)
data.meltcurve %>%
dplyr::select(-Temperature) %>%
pivot_wider(
names_from = "Reading", values_from = "dF",
id_cols = Position
) %>%
column_to_rownames("Position") %>%
prcomp %>%
autoplot(
data = .$x %>%
as.data.frame() %>%
rownames_to_column("Position") %>%
left_join(genotypes),
colour = "genotype"
)
data.meltcurve %>%
left_join(genotypes) %>%
dplyr::filter(grepl(Position, pattern = "^B")) %>%
ggplot(
aes(x = Temperature, y = dF, colour = Position)
) +
geom_line(
aes(group = Position)
) +
geom_vline(xintercept = 82) +
scale_color_brewer(palette = "Paired") +
scale_y_continuous(labels = comma) +
scale_x_continuous( # zoom into region of interest.
limits = c(78, 87),
breaks = 1:90
)
data.meltcurve %>%
left_join(genotypes) %>%
#dplyr::filter(grepl(Position, pattern = "^B")) %>%
ggplot(
aes(x = Temperature, y = dF, colour = Position)
) +
geom_line(
aes(group = Position)
) +
geom_vline(xintercept = 82) +
scale_color_brewer(palette = "Paired") +
scale_y_continuous(labels = comma) +
scale_x_continuous( # zoom into region of interest.
limits = c(78, 87),
breaks = 1:90
)
data.meltcurve %>%
left_join(genotypes) %>%
#dplyr::filter(grepl(Position, pattern = "^B")) %>%
ggplot(
aes(x = Temperature, y = dF, colour = Position)
) +
geom_line(
aes(group = Position)
) +
geom_vline(xintercept = 82) +
#scale_color_brewer(palette = "Paired") +
scale_y_continuous(labels = comma) +
scale_x_continuous( # zoom into region of interest.
limits = c(78, 87),
breaks = 1:90
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("shinythemes")
runApp('app_hets/app2.R')
runApp('app_hets/app2.R')
# Define UI for application that draws a histogram
ui <- fluidPage(
# theme of the app
theme = bslib::bs_theme(bootswatch = "simplex"),
# Application title
titlePanel("Melt curve genotyping (naglu)",
windowTitle = "Genotyping from melt curves"
),
# tabset input ------------------------------------------------------------
tabsetPanel(
tabPanel(title = "Input data",
fileInput("files",
label = "Choose TXT files",
multiple = TRUE,
accept = c("text/plain", ".txt")),
tableOutput("files")
),
# tabset Inputparams ------------------------------------------------------------
tabPanel(title = "Params",
sidebarLayout(
sidebarPanel(
# mut temp min
numericInput(inputId = "mut_temp_min",
label = "Mutant peak min temp",
value = 80.2,
min = 60,
max = 100),
# mut temp max
numericInput(inputId = "mut_temp_max",
label = "Mutant peak max temp",
value = 81.9,
min = 60,
max = 100),
# wt temp min
numericInput(inputId = "wt_temp_min",
label = "wt peak min temp",
value = 82.8,
min = 60,
max = 100),
# wt temp max
numericInput(inputId = "wt_temp_max",
label = "wt peak max temp",
value = 84.5,
min = 60,
max = 100),
# het temp min
numericInput(inputId = "het_temp_min",
label = "het peak min temp",
value = 80.2,
min = 60,
max = 100),
# mut temp max
numericInput(inputId = "het_temp_max",
label = "het peak max temp",
value = 81.9,
min = 60,
max = 100),
# mut deriv min
numericInput(inputId = "mut_deriv_min",
label = "Mutant peak min deriv",
value = 27000,
min = 0,
max = 500000),
# mut deriv max
numericInput(inputId = "mut_deriv_max",
label = "Mutant peak max deriv",
value = 110000,
min = 0,
max = 500000),
# wt deriv min
numericInput(inputId = "wt_deriv_min",
label = "wt peak min deriv",
value = 40000,
min = 0,
max = 500000),
# wt deriv max
numericInput(inputId = "wt_deriv_max",
label = "wt peak max deriv",
value = 135000,
min = 0,
max = 500000),
# het deriv min
numericInput(inputId = "het_deriv_min",
label = "het peak min deriv",
value = 40000,
min = 0,
max = 500000),
# het deriv max
numericInput(inputId = "het_deriv_max",
label = "het peak max deriv",
value = 135000,
min = 0,
max = 500000)
),
),
mainPanel(plotOutput("myPlot", width = "100%")))),
# tabset call genotypes ---------------------------------------------------
tabPanel(
title = "Called genotypes",
plotOutput("genotypeplot", width = "100%"),
downloadButton(
outputId = "downloadGeno",
label = "Download Genotype table")
)
)
runApp('app_hets/app2.R')
runApp('app_hets/app2.R')
runApp('app_hets/app2.R')
runApp('app2.R')
runApp('app2.R')
library(shiny)
library(tidyverse)
library(vroom)
library(scales)
library(shinythemes)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp()
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
# read in the data
files <- list.files("~/Downloads", pattern = "AW" full.names = TRUE)
# read in the data
files <- list.files("~/Downloads/", pattern = "AW" full.names = TRUE)
# read in the data
files <- list.files("~/Downloads/", pattern = "AW", full.names = TRUE)
files
# read in the data
files <- list.files("~/Downloads", pattern = "AW", full.names = TRUE)
files
# read in the data
files <- list.files("~/Downloads", pattern = "20250721AWdegs1degs2", full.names = TRUE)
files
dfs <- read_tsv(files[1], skip = 8) %>%
pivot_longer(names_to = "Reading",
values_to = "dF",
starts_with("Reading")
) %>%
dplyr::select(Position = `Well Location`, Reading, dF)
dfs
# temperature readings
temps <- read_tsv(files[2], skip = 8) %>%
pivot_longer(names_to = "Reading",
values_to = "Temperature",
starts_with("Reading")
) %>%
dplyr::select(Position = `Well Location`, Reading, Temperature)
temps
runApp('app2.R')
shiny::runApp()
runApp('app2.R')
shiny::runApp()
runApp()
# read in the data
files <- list.files("~/Downloads", pattern = "20250723AW degs2P6", full.names = TRUE)
files
dfs <- read_tsv(files[1], skip = 8) %>%
pivot_longer(names_to = "Reading",
values_to = "dF",
starts_with("Reading")
) %>%
dplyr::select(Position = `Well Location`, Reading, dF)
dfs <- read_tsv(files[1], skip = 8) %>%
pivot_longer(names_to = "Reading",
values_to = "dF",
starts_with("Reading")
) %>%
dplyr::select(Position = `Well Location`, Reading, dF)
dfs
runApp()
# plot
data %>%
left_join(genotypes) %>%
ggplot(
aes(x = temp, y = deriv, colour = genotype)
) +
geom_line(
aes(group = position)
) +
scale_y_continuous(labels = comma,
limits = c(0, 200000)) +
scale_x_continuous( # zoom into region of interest.
limits = c(70, 90),
breaks = 1:90
) +
scale_color_manual(
values = c("darkgreen", "red", "darkred","grey50")
) +
facet_wrap(~genotype, nrow = 1) +
theme(text = element_text(size = 18))
runApp()
runApp()
66:76\
66:76
# Generate the plot
ggp <- data %>%
ggplot(aes(x = temp, y = deriv)) +
geom_line(aes(group = position)) +
# adjust the labels. and breaks as necessary
scale_y_continuous(
labels = comma,
breaks = seq(0, 500000, by = 25000)
) +
scale_x_continuous(
limits = c(66, 76),
breaks = 66:76
) +
# mut allele
annotate(
geom = "rect",
alpha = 0.5,
fill = "red",
xmin = mut_temp_min,
xmax = mut_temp_max,
ymin = mut_deriv_min,
ymax = mut_deriv_max
) +
# wt allele
annotate(
geom = "rect",
alpha = 0.5,
fill = "green",
xmin = wt_temp_min,
xmax = wt_temp_max,
ymin = wt_deriv_min,
ymax = wt_deriv_max
) +
theme(text = element_text(size = 18))
runApp()
runApp()
runApp()
runApp()
runApp()
